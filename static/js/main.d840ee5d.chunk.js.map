{"version":3,"sources":["../../dist/index.es.js","layout/Header.js","utils/useFlash.js","SetAmountExample.js","SetUsernameExample.js","SetObjectExample.js","UseStoreExample.js","UseSetAndDeleteExample.js","Description.js","App.js","index.js"],"names":["_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_defineProperty","obj","value","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","_slicedToArray","arr","Array","isArray","_arrayWithHoles","Symbol","iterator","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","_iterableToArrayLimit","TypeError","_nonIterableRest","_toConsumableArray","arr2","_arrayWithoutHoles","iter","from","_iterableToArray","_nonIterableSpread","StoreContext","createContext","result","root","observable","symbolObservablePonyfill","self","window","global","module","randomString","Math","random","substring","split","join","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","isPlainObject","proto","getPrototypeOf","createStore","reducer","preloadedState","enhancer","_ref2","Error","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","slice","getState","subscribe","listener","isSubscribed","index","indexOf","splice","dispatch","action","type","listeners","replaceReducer","nextReducer","_ref","outerSubscribe","observer","observeState","unsubscribe","this","getUndefinedStateErrorMessage","actionType","String","_defineProperty$1","ownKeys$1","_objectSpread2$1","compose","_len","funcs","_key","arg","reduce","a","b","applyMiddleware","middlewares","store","_dispatch","middlewareAPI","chain","map","middleware","SET_VALUE","REMOVE_VALUE","rootReducer","reducers","reducerKeys","finalReducers","shapeAssertionError","finalReducerKeys","assertReducerShape","e","state","hasChanged","nextState","previousStateForKey","nextStateForKey","errorMessage","combineReducers","main","_action$payload","payload","newState","_newState","logger","prevState","returnValue","console","group","info","concat","groupEnd","listernerMiddleware","createStoreCreator","initialValue","config","logging","Boolean","defaultConfig","withStore","WrappedComponent","freeze","createElement","Provider","Subscription","onStateChange","instance","Constructor","_classCallCheck","unsuscribeFromSubscription","bind","protoProps","staticProps","setStoreValueAction","deleteStoreValueAction","useSelector","stateSelector","stateSelectorFn","forceRender","s","latestStateSelectorFn","latestSelectedState","checkForUpdates","newSelectedState","current","resultValue","subscription","useSelectorWithStoreAndSubscription","useStore","defaultValue","useStoreValue","useSetStoreValue","useDeleteStoreValue","useSetAndDelete","useStoreState","Header","className","href","useFlashWhenRender","ref","React","useRef","useEffect","classList","toggle","setTimeout","SetAmountExample","count","setCount","deleteCount","onClick","SetUsernameExample","username","setUsername","useState","textValue","setTextValue","onSubmit","event","preventDefault","onChange","placeholder","storeKey","SetObjectExample","name","surname","access_token","token","expires_in","setObject","deleteObject","JSON","stringify","UseStoreExample","price","setPrice","deletePrice","UseSetAndDeleteExample","setValue","deleteValue","Description","globalState","storeConfig","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d840ee5d.chunk.js","sourcesContent":["import React, { useContext, useReducer, useRef, useMemo, useEffect } from 'react';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nvar StoreContext = React.createContext(null);\n\nfunction symbolObservablePonyfill(root) {\n  var result;\n  var Symbol = root.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (Symbol.observable) {\n      result = Symbol.observable;\n    } else {\n      result = Symbol('observable');\n      Symbol.observable = result;\n    }\n  } else {\n    result = '@@observable';\n  }\n\n  return result;\n}\n/* global window */\n\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = symbolObservablePonyfill(root);\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\n\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\n\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error('It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected the listener to be a function.');\n    }\n\n    if (isDispatching) {\n      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[result] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[result] = observable, _ref2;\n}\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\n\n\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionDescription = actionType && \"action \\\"\" + String(actionType) + \"\\\"\" || 'an action';\n  return \"Given \" + actionDescription + \", reducer \\\"\" + key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\";\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle \" + ActionTypes.INIT + \" or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction _defineProperty$1(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    keys.push.apply(keys, Object.getOwnPropertySymbols(object));\n  }\n\n  if (enumerableOnly) keys = keys.filter(function (sym) {\n    return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n  });\n  return keys;\n}\n\nfunction _objectSpread2$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys$1(source, true).forEach(function (key) {\n        _defineProperty$1(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$1(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\n\n\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread2$1({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nvar SET_VALUE = 'SET VALUE';\nvar REMOVE_VALUE = 'REMOVE VALUE';\n\nfunction mainReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_VALUE:\n      {\n        var _action$payload = action.payload,\n            key = _action$payload.key,\n            value = _action$payload.value;\n\n        var newState = _objectSpread2({}, state);\n\n        newState[key] = value;\n        return newState;\n      }\n\n    case REMOVE_VALUE:\n      {\n        var _key = action.payload.key;\n\n        var _newState = _objectSpread2({}, state);\n\n        delete _newState[_key];\n        return _newState;\n      }\n\n    default:\n      return state;\n  }\n}\n\nvar rootReducer = combineReducers({\n  main: mainReducer\n});\n\nvar logger = function logger(_ref) {\n  var getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      var prevState = getState().main;\n      var returnValue = next(action);\n      console.group(\"%c react-context-hook\", 'font-weight: bold');\n      console.info(\"%c \".concat('PREV STATE', \" \"), 'background: #00e5a0;font-weight: bold', prevState);\n      console.info(\"%c \".concat('ACTION', \" %c \", action.type), 'background: yellow;font-weight: bold', 'font-weight: bold;', action.payload.key, action.payload.value);\n      console.info(\"%c \".concat('NEXT STATE', \" \"), 'background: #00cbff;font-weight: bold', getState().main);\n      console.groupEnd();\n      return returnValue;\n    };\n  };\n};\n\nvar listernerMiddleware = function listernerMiddleware(listener) {\n  return function (_ref2) {\n    var getState = _ref2.getState;\n    return function (next) {\n      return function (action) {\n        var value = next(action);\n        listener(getState().main);\n        return value;\n      };\n    };\n  };\n};\n\nfunction createStoreCreator() {\n  var initialValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var config = arguments.length > 1 ? arguments[1] : undefined;\n  var logging = config.logging,\n      listener = config.listener;\n  return createStore(rootReducer, {\n    main: initialValue\n  }, applyMiddleware.apply(void 0, _toConsumableArray([listener && listernerMiddleware(listener), logging && logger].filter(Boolean))));\n}\n\nvar defaultConfig = {};\n/**\n * @param {ReactElement} WrappedComponent the component to connect with the store\n * @param {Object} initialValue the initial store value or nothing\n * @param {Object} config the custom configuration. If nothing is passed will use the default config\n * @param {Function} config.listener a function that is triggered each time the store is modified.\n * @param {boolean} config.proxyStore - default `true` - if true the store will be protected by a Proxy. Set to false if your environment does not support Proxy. If you use `react-context-hook` in the browser set it to true\n * @example\n *const initialState = { count: 10 }\n *\n *const storeConfig = {\n *  listener: state => {\n *    console.log('state changed', state)\n *  },\n *  logging: true //process.env.NODE_ENV !== 'production'\n *}\n *\n *export default withStore(App, initialState, storeConfig)\n */\n\nvar withStore = function withStore(WrappedComponent, initialValue, config) {\n  var userConfig = Object.freeze(_objectSpread2({}, defaultConfig, {}, config));\n  var store = createStoreCreator(initialValue, userConfig);\n  return function (props) {\n    return React.createElement(StoreContext.Provider, {\n      value: {\n        store: store\n      }\n    }, React.createElement(WrappedComponent, props));\n  };\n};\n\nvar Subscription =\n/*#__PURE__*/\nfunction () {\n  function Subscription(store, onStateChange) {\n    _classCallCheck(this, Subscription);\n\n    this.store = store; // this.handleChangeWrapper = this.handleChangeWrapper.bind(this)\n\n    this.unsuscribeFromSubscription = null;\n    this.onStateChange = onStateChange.bind(this);\n  }\n\n  _createClass(Subscription, [{\n    key: \"subscribe\",\n    value: function subscribe() {\n      this.unsuscribeFromSubscription = this.store.subscribe(this.onStateChange);\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      this.unsuscribeFromSubscription();\n      this.unsuscribeFromSubscription = null;\n    }\n  }]);\n\n  return Subscription;\n}();\n\nvar setStoreValueAction = function setStoreValueAction(key, value) {\n  return {\n    type: SET_VALUE,\n    payload: {\n      key: key,\n      value: value\n    }\n  };\n};\n\nvar deleteStoreValueAction = function deleteStoreValueAction(key) {\n  return {\n    type: REMOVE_VALUE,\n    payload: {\n      key: key\n    }\n  };\n};\n\nfunction equalityFn(a, b) {\n  return a === b;\n}\n\nfunction useSelector(stateSelector) {\n  var selectedState = useSelectorWithStoreAndSubscription(stateSelector);\n  return selectedState;\n}\n\nfunction useSelectorWithStoreAndSubscription(stateSelectorFn) {\n  var _useReducer = useReducer(function (s) {\n    return s + 1;\n  }, 0),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      forceRender = _useReducer2[1];\n\n  var _useContext = useContext(StoreContext),\n      store = _useContext.store;\n\n  var latestStateSelectorFn = useRef();\n  var latestSelectedState = useRef();\n\n  function checkForUpdates() {\n    try {\n      var newSelectedState = latestStateSelectorFn.current(store.getState().main);\n\n      if (equalityFn(newSelectedState, latestSelectedState.current)) {\n        return;\n      }\n\n      latestSelectedState.current = newSelectedState;\n    } catch (err) {// ignore all errors\n    }\n\n    forceRender({});\n  }\n\n  var subscription = useMemo(function () {\n    return new Subscription(store, checkForUpdates);\n  }, [store, checkForUpdates]);\n  var resultValue;\n\n  if (stateSelectorFn !== latestStateSelectorFn.current) {\n    resultValue = stateSelectorFn(store.getState().main);\n  } else {\n    resultValue = latestSelectedState.current;\n  }\n\n  useEffect(function () {\n    latestStateSelectorFn.current = stateSelectorFn;\n    latestSelectedState.current = resultValue;\n  });\n  useEffect(function () {\n    subscription.subscribe();\n    checkForUpdates();\n    return function () {\n      return subscription.unsubscribe();\n    };\n  }, [store, subscription]);\n  return resultValue;\n}\n/**\n * `useStore` is a React Hook that access a value stored in the application global store. It returns the value, a function to update it (like React.useState) and a function to delete it.\n *\n * @param {string} key - The lookup key to find the saved value in the store\n * @param {any} defaultValue - The value if the value in the store is missing\n *\n * @returns {array} an array with length 3:<br>\n * position 0 - the value of the data in the store.<br>\n * position 1 - a function *setValue* to modify the data in the store. When used, this function return a promise that resolve nothing, thus you can use `setValue('a value').then(() => {doSomething() //when the store did update})`<br>\n * position 2 - a function *deleteValue* to delete the value from the store. When used, this function return a promise that resolve nothing, thus you can use `deleteValue('a value').then(() => {doSomething() //when the store did update})`\n *\n * @example\n * import {useStore} from 'react-context-hook'\n * const [username, setUsername, deleteUsername] = useStore('username')\n * <div>hello {username}</div>\n * <button onClick={()=> setUsername('my_username')}>set username</button>\n *\n */\n\n\nfunction useStore(key, defaultValue) {\n  return [useStoreValue(key, defaultValue), useSetStoreValue(key), useDeleteStoreValue(key)];\n}\n/**\n * Returns a function to set or update a variable in the store. You want to use this hook when you just need to modify the store, not read or delete a value from it.\n * @param {string} key - the name of the variable to set in the store\n * @returns {Function} - a function to set a variable in the store with the given name When used, this function return a promise that resolve nothing, thus you can use `setValue('a value').then(() => {doSomething() //when the store did update})`\n *\n * @example\n * import {useSetStoreValue} from 'react-context-hook'\n * const setUsername = useSetStoreValue('username')\n * <button onClick={()=> setUsername('my_username')}>set username</button>\n */\n\n\nfunction useSetStoreValue(key) {\n  var _useContext2 = useContext(StoreContext),\n      store = _useContext2.store;\n\n  return function (value) {\n    store.dispatch(setStoreValueAction(key, value));\n  };\n}\n/**\n * Returns a function to delete a variable in the store. You want to use this hook when you just need to delete a value in the store, not read or set a value from it.\n * @param {string} key - the name of the variable to set in the store\n * @returns {Function} - a function to delete a variable in the store with the given name. When used, this function return a promise that resolve nothing, thus you can use `deleteValue('a value').then(() => {doSomething() //when the store did update})`\n *\n * @example\n * import {useDeleteStoreValue} from 'react-context-hook'\n * const deleteUsername = useDeleteStoreValue('username')\n * <button onClick={()=> deleteUsername('my_username')}>set username</button>\n */\n\n\nfunction useDeleteStoreValue(key) {\n  var _useContext3 = useContext(StoreContext),\n      store = _useContext3.store;\n\n  return function (value) {\n    store.dispatch(deleteStoreValueAction(key));\n  };\n}\n/**\n *This React hook returns an array to read and modify a value in the store:\n * `const [value, setValue] = useGetAndSet('a_lookup_key_in_the_store')`. The name of the variable in the arry is arbitrary and you can choose any string you like.\n * @param {string} key - The lookup key to find the saved value in the store\n * @param {any} defaultValue - The default value if missing\n * @returns {array} an array with length 2:<br>\n * position 0 - the value of the data in the store.<br>\n * position 1 - a function *setValue* to modify the data in the store. When used, this function return a promise that resolve nothing, thus you can use `setValue('a value').then(() => {doSomething() //when the store did update})`<br>\n *\n * @example\n * import {useGetAndSet} from 'react-context-hook'\n * const [username, setUsername] = useGetAndSet('username')\n * <div>hello {username}</div>\n * <button onClick={()=> setUsername('my_username')}>set username</button>\n *\n *  const [value, setValue] = useGetAndSet('a_lookup_key_in_the_store')\n *\n */\n\n\nfunction useGetAndSet(key, defaultValue) {\n  return [useStoreValue(key, defaultValue), useSetStoreValue(key)];\n}\n/**\n *This React hook returns an array to read and delete a value in the store:\n * `const [value, deleteValue] = useGetAndDelete('a_lookup_key_in_the_store')`. The name of the variable in the arry is arbitrary and you can choose any string you like.\n * @param {string} key - The lookup key to find the saved value in the store\n *\n * @returns {array} an array with length 2:<br>\n * position 0 - the value of the data in the store.<br>\n * position 1 - a function *deleteValue* to delete the data in the store. When used, this function return a promise that resolve nothing, thus you can use `deleteValue('a value').then(() => {doSomething() //when the store did update})`<br>\n *\n * @example\n * import {useGetAndDelete} from 'react-context-hook'\n * const [username, deleteUsername] = useGetAndDelete('username')\n * <div>hello {username}</div>\n * <button onClick={()=> deleteUsername('my_username')}>set username</button>\n *\n */\n\n\nfunction useGetAndDelete(key) {\n  return [useStoreValue(key), useDeleteStoreValue(key)];\n}\n/**\n *This React hook returns an array to set and delete a value in the store:\n * `const [setValue, deleteValue] = useGetAndDelete('a_lookup_key_in_the_store')`. The name of the variable in the arry is arbitrary and you can choose any string you like.\n * @param {string} key - The lookup key to find the saved value in the store\n *\n * @returns {array} an array with length 2:<br>\n * position 0 - a function *setValue* to modify the data in the store. When used, this function return a promise that resolve nothing, thus you can use `setValue('a value').then(() => {doSomething() //when the store did update})`<br>\n * position 1 - a function *deleteValue* to delete the data in the store. When used, this function return a promise that resolve nothing, thus you can use `deleteValue('a value').then(() => {doSomething() //when the store did update})`<br>\n *\n * @example\n * import {useGetAndDelete} from 'react-context-hook'\n * const [username, deleteUsername] = useGetAndDelete('username')\n * <div>hello {username}</div>\n * <button onClick={()=> deleteUsername('my_username')}>set username</button>\n *\n */\n\n\nfunction useSetAndDelete(key) {\n  return [useSetStoreValue(key), useDeleteStoreValue(key)];\n}\n/**\n *\n * @param {string} key - the name of the variable / value to be retrieved in the global store.\n * @param {any} [defaultValue] - an optional default value, if the value in the global store is not present.\n *\n * @returns {any} the value on the global store, or the default value if passed, or `undefined`\n */\n\n\nfunction useStoreValue(key, defaultValue) {\n  function stateSelector(state) {\n    return state[key];\n  }\n\n  return useSelector(stateSelector) || defaultValue;\n}\n/**\n * Returns the whole store value, with all the variables stored in it. Changes to this object will not change the store\n *\n * @returns {object} - An object representing the whole store value in read only mode.\n *\n * @example\n * import {useStoreState} from 'react-context-hook'\n * const store = useStoreState()\n * console.log('the store is', JSON.stringify(store))\n */\n\n\nfunction useStoreState() {\n  function stateSelector(state) {\n    return state;\n  }\n\n  return useSelector(stateSelector);\n}\n\nexport { useDeleteStoreValue, useGetAndDelete, useGetAndSet, useSetAndDelete, useSetStoreValue, useStore, useStoreState, useStoreValue, withStore };","import React from 'react'\n\nexport default function Header() {\n  return (\n    <header className=\"App-header\">\n      <h1>\n        React context Hook <a href=\"docs\">Documentation</a>{' '}\n        <a href=\"https://github.com/Spyna/react-context-hook\">GitHub</a>\n      </h1>\n      <h2>\n        A 3 KB library to manage the global state with the Context API and React\n        hooks\n      </h2>\n    </header>\n  )\n}\n","import React from 'react'\n\nexport const useFlashWhenRender = () => {\n  const ref = React.useRef()\n  React.useEffect(() => {\n    ref.current.classList.toggle('flash')\n    setTimeout(() => ref.current.classList.toggle('flash'), 100)\n  })\n  return ref\n}\n","import React from 'react'\nimport { useStore } from 'react-context-hook'\nimport { useFlashWhenRender } from './utils/useFlash'\n\nexport default function SetAmountExample() {\n  const [count, setCount, deleteCount] = useStore('count', 0)\n\n  return (\n    <section ref={useFlashWhenRender()}>\n      <h3>\n        Set the value <em>\"count\"</em> in the store\n      </h3>\n      <button onClick={() => setCount(count - 1)}>Decrement - </button>\n      <span className=\"count\">{count}</span>\n      <button onClick={() => setCount(count + 1)}>Increment + </button>\n      <button onClick={() => deleteCount()}>Delete \"count\" from store</button>\n    </section>\n  )\n}\n","import React from 'react'\nimport { useStore } from 'react-context-hook'\nimport { useFlashWhenRender } from './utils/useFlash'\n\nexport default function SetUsernameExample() {\n  const [username, setUsername] = useStore('username', 'spyna', false)\n  const [textValue, setTextValue] = React.useState(username)\n  function onChange(event) {\n    setTextValue(event.target.value)\n  }\n\n  function onSubmit(event) {\n    event.preventDefault()\n    setUsername(textValue)\n  }\n\n  return (\n    <section ref={useFlashWhenRender()}>\n      <h3>\n        Set the value <em>\"username\"</em> in the store\n      </h3>\n      <form onSubmit={onSubmit}>\n        <input\n          onChange={onChange}\n          value={textValue}\n          placeholder=\"type your username\"\n        />\n        <button>Change value in store</button>\n      </form>\n    </section>\n  )\n}\n","import React from 'react'\nimport {\n  useStoreValue,\n  useSetStoreValue,\n  useDeleteStoreValue\n} from 'react-context-hook'\nimport { useFlashWhenRender } from './utils/useFlash'\n\nconst storeKey = 'login.logged_user'\n\nexport default function SetObjectExample() {\n  const defaultValue = {\n    name: 'My name',\n    surname: ' surname',\n    access_token: {\n      type: 'Bearer',\n      token: 'd293LCB5b3UgYXJlIHZlcnkgY3VyaW91cyEgZ29vZCBmb3IgeW91',\n      expires_in: 3600\n    }\n  }\n  const object = useStoreValue(storeKey, defaultValue)\n  const setObject = useSetStoreValue(storeKey)\n  const deleteObject = useDeleteStoreValue(storeKey)\n  return (\n    <section ref={useFlashWhenRender()}>\n      <h3>\n        Set/Remove this object in the store with the key <code>{storeKey}</code>\n      </h3>\n      <pre>\n        <code>{JSON.stringify(object, null, ' ')}</code>\n      </pre>\n      <button onClick={() => setObject(object)}>set Object in store</button>\n      <button onClick={() => deleteObject()}>remove Object from store</button>\n    </section>\n  )\n}\n","import React from 'react'\nimport { useStore } from 'react-context-hook'\nimport { useFlashWhenRender } from './utils/useFlash'\n\nexport default function UseStoreExample() {\n  const [price, setPrice, deletePrice] = useStore('price')\n  return (\n    <section ref={useFlashWhenRender()}>\n      <h3>\n        Set/Remove the key<code>price</code> with the value of{' '}\n        <code>99.9 $</code>\n      </h3>\n      <pre>\n        <code>{price}</code>\n      </pre>\n      <button onClick={() => setPrice('99.9 $')}>set price in store</button>\n      <button onClick={() => deletePrice()}>remove prce from store</button>\n    </section>\n  )\n}\n","import React from 'react'\nimport { useSetAndDelete } from 'react-context-hook'\nimport { useFlashWhenRender } from './utils/useFlash'\n\nexport default function UseSetAndDeleteExample() {\n  const [setValue, deleteValue] = useSetAndDelete('a-sample-key')\n  return (\n    <section ref={useFlashWhenRender()}>\n      <h3>\n        Set/Remove the key<code>'a-sample-key'</code> with the value{' '}\n        <code>'the value'</code>\n      </h3>\n      <button onClick={() => setValue('the value')}>\n        set 'a-sample-key' in store\n      </button>\n      <button onClick={() => deleteValue()}>\n        remove 'a-sample-key' from store\n      </button>\n    </section>\n  )\n}\n","import React from 'react'\nimport { useStoreState } from 'react-context-hook'\nimport { useFlashWhenRender } from './utils/useFlash'\n\nexport default function Description() {\n  const globalState = useStoreState()\n  return (\n    <section ref={useFlashWhenRender()}>\n      <h3>\n        This is a React App that has a global state. This is the value of the\n        global <em>state</em>.\n      </h3>\n      <pre>\n        <code>{JSON.stringify(globalState, null, ' ')}</code>\n      </pre>\n      <p>\n        You can change the global state from different components, using the\n        buttons you find in this page\n      </p>\n      <p>Every time a component renders, it flashes. </p>\n    </section>\n  )\n}\n","import React from 'react'\nimport { withStore } from 'react-context-hook'\nimport Header from './layout/Header'\nimport SetAmount from './SetAmountExample'\nimport SetUsernameExample from './SetUsernameExample'\nimport './App.css'\nimport SetObjectExample from './SetObjectExample'\nimport UseStoreExample from './UseStoreExample'\nimport UseSetAndDeleteExample from './UseSetAndDeleteExample'\nimport Description from './Description'\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <main className=\"App\">\n        <Description />\n        <SetAmount />\n        <SetUsernameExample />\n        <SetObjectExample />\n        <UseStoreExample />\n        <UseSetAndDeleteExample />\n      </main>\n    </div>\n  )\n}\n\nconst initialState = { count: 10 }\n\nconst storeConfig = {\n  listener: (state) => {\n    console.log('state changed', state)\n  },\n  logging: true //process.env.NODE_ENV !== 'production'\n}\n\nexport default withStore(App, initialState, storeConfig)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}
{"version":3,"sources":["../../dist/index.es.js","layout/Header.js","utils/useFlash.js","SetAmountExample.js","SetUsernameExample.js","SetObjectExample.js","UseStoreExample.js","UseSetAndDeleteExample.js","Description.js","UseStoreValueWithFalsyValues.js","App.js","index.js"],"names":["_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_defineProperty","obj","value","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","_slicedToArray","arr","Array","isArray","_arrayWithHoles","Symbol","iterator","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","_iterableToArrayLimit","TypeError","_nonIterableRest","_toConsumableArray","arr2","_arrayWithoutHoles","iter","from","_iterableToArray","_nonIterableSpread","StoreContext","createContext","SET_VALUE","REMOVE_VALUE","RESET","rootReducer","main","state","action","type","_action$payload","payload","newState","_key","_newState","logger","_ref","getState","prevState","returnValue","console","group","info","concat","groupEnd","listernerMiddleware","listener","_ref2","prevValue","nextValue","storeCreator","initialValue","config","logging","middlewares","Boolean","setStoreValueAction","deleteStoreValueAction","resetStoreWithValue","createRawStore","store","reset","dispatch","set","defaultConfig","Subscription","onStateChange","instance","Constructor","_classCallCheck","this","unsuscribeFromSubscription","bind","protoProps","staticProps","subscribe","useSelector","stateSelectorFn","forceRender","s","latestStateSelectorFn","latestSelectedState","checkForUpdates","newSelectedState","current","a","b","resultValue","subscription","unsubscribe","useStore","defaultValue","useStoreValue","useSetStoreValue","useDeleteStoreValue","storeValue","Header","className","href","useFlashWhenRender","ref","React","useRef","useEffect","classList","toggle","setTimeout","SetAmountExample","count","setCount","deleteCount","id","onClick","SetUsernameExample","username","setUsername","useState","textValue","setTextValue","onSubmit","event","preventDefault","onChange","name","placeholder","storeKey","SetObjectExample","surname","access_token","token","expires_in","setObject","deleteObject","JSON","stringify","UseStoreExample","price","setPrice","deletePrice","UseSetAndDeleteExample","setValue","deleteValue","Description","globalState","UseStoreValueWithFalsyValues","login","counter","nullValue","withStore","WrappedComponent","freeze","createElement","Provider","logIn","log","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e33e4b35.chunk.js","sourcesContent":["import React, { useContext, useReducer, useRef, useMemo, useEffect } from 'react';\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nvar StoreContext = React.createContext(null);\nvar SET_VALUE = 'SET VALUE';\nvar REMOVE_VALUE = 'REMOVE VALUE';\nvar RESET = 'RESET STORE';\n\nfunction mainReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_VALUE:\n      {\n        var _action$payload = action.payload,\n            key = _action$payload.key,\n            value = _action$payload.value;\n\n        var newState = _objectSpread2({}, state);\n\n        newState[key] = value;\n        return newState;\n      }\n\n    case REMOVE_VALUE:\n      {\n        var _key = action.payload.key;\n\n        var _newState = _objectSpread2({}, state);\n\n        delete _newState[_key];\n        return _newState;\n      }\n\n    case RESET:\n      {\n        return action.payload;\n      }\n\n    default:\n      return state;\n  }\n}\n\nvar rootReducer = combineReducers({\n  main: mainReducer\n});\n\nvar logger = function logger(_ref) {\n  var getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      var prevState = getState().main;\n      var returnValue = next(action);\n      console.group(\"%c react-context-hook\", 'font-weight: bold');\n      console.info(\"%c \".concat('PREV STATE', \" \"), 'background: #00e5a0;font-weight: bold', prevState);\n      console.info(\"%c \".concat('ACTION', \" %c \", action.type), 'background: yellow;font-weight: bold', 'font-weight: bold;', action.payload.key || '', action.payload.value || action.payload);\n      console.info(\"%c \".concat('NEXT STATE', \" \"), 'background: #00cbff;font-weight: bold', getState().main);\n      console.groupEnd();\n      return returnValue;\n    };\n  };\n};\n\nvar listernerMiddleware = function listernerMiddleware(listener) {\n  return function (_ref2) {\n    var getState = _ref2.getState;\n    return function (next) {\n      return function (action) {\n        var key = action.payload.key;\n        var prevValue = getState().main[key];\n        var value = next(action);\n        var nextValue = getState().main[key];\n        listener(getState().main, key, prevValue, nextValue);\n        return value;\n      };\n    };\n  };\n};\n\nfunction storeCreator() {\n  var initialValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var logging = config.logging,\n      listener = config.listener;\n  var middlewares = [listener && listernerMiddleware(listener), logging && logger].filter(Boolean);\n  return createStore(rootReducer, {\n    main: initialValue\n  }, applyMiddleware.apply(void 0, _toConsumableArray(middlewares)));\n}\n\nvar setStoreValueAction = function setStoreValueAction(key, value) {\n  return {\n    type: SET_VALUE,\n    payload: {\n      key: key,\n      value: value\n    }\n  };\n};\n\nvar deleteStoreValueAction = function deleteStoreValueAction(key) {\n  return {\n    type: REMOVE_VALUE,\n    payload: {\n      key: key\n    }\n  };\n};\n\nvar resetStoreWithValue = function resetStoreWithValue() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return {\n    type: RESET,\n    payload: state\n  };\n};\n\nfunction createRawStore(store) {\n  return {\n    /**\n     * Resets the state to the given input.\n     *\n     * @param {Object} state the new value to reset the state to.\n     */\n    reset: function reset(state) {\n      store.dispatch(resetStoreWithValue(state));\n    },\n\n    /**\n     * Sets the specified key in the store. This function is equivaluent to the `useSetStoreValue` hook.\n     *\n     * @param {string} key the property to set in the store\n     * @param {Object} value the value of the property\n     */\n    set: function set(key, value) {\n      store.dispatch(setStoreValueAction(key, value));\n    },\n\n    /**\n     * delete the specified key from the store. This function is equivaluent to the `useDeleteStoreValue` hook.\n     *\n     * @param {string} key the property to set in the store\n     */\n    \"delete\": function _delete(key) {\n      store.dispatch(deleteStoreValueAction(key));\n    },\n\n    /**\n     * @returns the global state value of the store\n     */\n    getState: function getState() {\n      return store.getState().main;\n    }\n  };\n}\n\nvar defaultConfig = {};\n/**\n * This store can be used outside of React components.\n */\n\nvar rawStore = createRawStore(storeCreator());\n/**\n * @param {ReactElement} WrappedComponent the component to connect with the store\n * @param {Object} initialValue an Object that will be the initial store value, or nothing\n * @param {Object} config the custom configuration. If nothing is passed, the default config will be used.\n * @param {Function} config.listener a function that is triggered each time the global state is modified. This function takes these parameters: (state, key, prevValue, nextValue). `state` is the value of the new state, `key` is the key that changed, `prevValue` is the old value of the key, `nextValule` is the new one.\n * @param {boolean} config.logging - default `false` - if true it will log changes to console\n * @example\n *const initialState = { count: 10 }\n *\n *const storeConfig = {\n *  listener: (state, key, prevValue, nextValue) => {\n      console.log(`the key \"${key}\" changed in the store`)\n      console.log('the old value is', prevValue)\n      console.log('the current value is', nextValue)\n      console.log('the state is', state)\n    },\n *  logging: process.env.NODE_ENV !== 'production'\n *}\n *\n *export default withStore(App, initialState, storeConfig)\n */\n\nvar withStore = function withStore(WrappedComponent, initialValue, config) {\n  var userConfig = Object.freeze(_objectSpread2({}, defaultConfig, {}, config));\n  var store = storeCreator(initialValue, userConfig);\n  rawStore = createRawStore(store);\n  return function (props) {\n    return React.createElement(StoreContext.Provider, {\n      value: {\n        store: store\n      }\n    }, React.createElement(WrappedComponent, props));\n  };\n};\n\nvar Subscription =\n/*#__PURE__*/\nfunction () {\n  function Subscription(store, onStateChange) {\n    _classCallCheck(this, Subscription);\n\n    this.store = store; // this.handleChangeWrapper = this.handleChangeWrapper.bind(this)\n\n    this.unsuscribeFromSubscription = null;\n    this.onStateChange = onStateChange.bind(this);\n  }\n\n  _createClass(Subscription, [{\n    key: \"subscribe\",\n    value: function subscribe() {\n      this.unsuscribeFromSubscription = this.store.subscribe(this.onStateChange);\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      this.unsuscribeFromSubscription();\n      this.unsuscribeFromSubscription = null;\n    }\n  }]);\n\n  return Subscription;\n}();\n\nfunction equalityFn(a, b) {\n  return a === b;\n}\n\nfunction useSelector(stateSelectorFn) {\n  var _useReducer = useReducer(function (s) {\n    return s + 1;\n  }, 0),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      forceRender = _useReducer2[1];\n\n  var _useContext = useContext(StoreContext),\n      store = _useContext.store;\n\n  var latestStateSelectorFn = useRef();\n  var latestSelectedState = useRef();\n\n  function checkForUpdates() {\n    try {\n      var newSelectedState = latestStateSelectorFn.current(store.getState().main);\n\n      if (equalityFn(newSelectedState, latestSelectedState.current)) {\n        return;\n      }\n\n      latestSelectedState.current = newSelectedState;\n    } catch (err) {// ignore all errors\n    }\n\n    forceRender({});\n  }\n\n  var subscription = useMemo(function () {\n    return new Subscription(store, checkForUpdates);\n  }, [store, checkForUpdates]);\n  var resultValue;\n\n  if (stateSelectorFn !== latestStateSelectorFn.current) {\n    resultValue = stateSelectorFn(store.getState().main);\n  } else {\n    resultValue = latestSelectedState.current;\n  }\n\n  useEffect(function () {\n    latestStateSelectorFn.current = stateSelectorFn;\n    latestSelectedState.current = resultValue;\n  });\n  useEffect(function () {\n    subscription.subscribe();\n    checkForUpdates();\n    return function () {\n      return subscription.unsubscribe();\n    };\n  }, [store, subscription]);\n  return resultValue;\n}\n/**\n * `useStore` is a React Hook that access a value stored in the application global store. It returns the value, a function to update it (like React.useState) and a function to delete it.\n *\n * @param {string} key - The lookup key to find the saved value in the store\n * @param {any} defaultValue - The value if the value in the store is missing\n *\n * @returns {array} an array with length 3:<br>\n * position 0 - the value of the data in the store.<br>\n * position 1 - a function *setValue* to modify the data in the store. When used, this function return a promise that resolve nothing, thus you can use `setValue('a value').then(() => {doSomething() //when the store did update})`<br>\n * position 2 - a function *deleteValue* to delete the value from the store. When used, this function return a promise that resolve nothing, thus you can use `deleteValue('a value').then(() => {doSomething() //when the store did update})`\n *\n * @example\n * import {useStore} from 'react-context-hook'\n * const [username, setUsername, deleteUsername] = useStore('username')\n * <div>hello {username}</div>\n * <button onClick={()=> setUsername('my_username')}>set username</button>\n *\n */\n\n\nfunction useStore(key, defaultValue) {\n  return [useStoreValue(key, defaultValue), useSetStoreValue(key), useDeleteStoreValue(key)];\n}\n/**\n * Returns a function to set or update a variable in the store. You want to use this hook when you just need to modify the store, not read or delete a value from it.\n * @param {string} key - the name of the variable to set in the store\n * @returns {Function} - a function to set a variable in the store with the given name When used, this function return a promise that resolve nothing, thus you can use `setValue('a value').then(() => {doSomething() //when the store did update})`\n *\n * @example\n * import {useSetStoreValue} from 'react-context-hook'\n * const setUsername = useSetStoreValue('username')\n * <button onClick={()=> setUsername('my_username')}>set username</button>\n */\n\n\nfunction useSetStoreValue(key) {\n  var _useContext2 = useContext(StoreContext),\n      store = _useContext2.store;\n\n  return function (value) {\n    store.dispatch(setStoreValueAction(key, value));\n  };\n}\n/**\n * Returns a function to delete a variable in the store. You want to use this hook when you just need to delete a value in the store, not read or set a value from it.\n * @param {string} key - the name of the variable to set in the store\n * @returns {Function} - a function to delete a variable in the store with the given name. When used, this function return a promise that resolve nothing, thus you can use `deleteValue('a value').then(() => {doSomething() //when the store did update})`\n *\n * @example\n * import {useDeleteStoreValue} from 'react-context-hook'\n * const deleteUsername = useDeleteStoreValue('username')\n * <button onClick={()=> deleteUsername('my_username')}>set username</button>\n */\n\n\nfunction useDeleteStoreValue(key) {\n  var _useContext3 = useContext(StoreContext),\n      store = _useContext3.store;\n\n  return function (value) {\n    store.dispatch(deleteStoreValueAction(key));\n  };\n}\n/**\n *This React hook returns an array to read and modify a value in the store:\n * `const [value, setValue] = useGetAndSet('a_lookup_key_in_the_store')`. The name of the variable in the arry is arbitrary and you can choose any string you like.\n * @param {string} key - The lookup key to find the saved value in the store\n * @param {any} defaultValue - The default value if missing\n * @returns {array} an array with length 2:<br>\n * position 0 - the value of the data in the store.<br>\n * position 1 - a function *setValue* to modify the data in the store. When used, this function return a promise that resolve nothing, thus you can use `setValue('a value').then(() => {doSomething() //when the store did update})`<br>\n *\n * @example\n * import {useGetAndSet} from 'react-context-hook'\n * const [username, setUsername] = useGetAndSet('username')\n * <div>hello {username}</div>\n * <button onClick={()=> setUsername('my_username')}>set username</button>\n *\n *  const [value, setValue] = useGetAndSet('a_lookup_key_in_the_store')\n *\n */\n\n\nfunction useGetAndSet(key, defaultValue) {\n  return [useStoreValue(key, defaultValue), useSetStoreValue(key)];\n}\n/**\n *This React hook returns an array to read and delete a value in the store:\n * `const [value, deleteValue] = useGetAndDelete('a_lookup_key_in_the_store')`. The name of the variable in the arry is arbitrary and you can choose any string you like.\n * @param {string} key - The lookup key to find the saved value in the store\n *\n * @returns {array} an array with length 2:<br>\n * position 0 - the value of the data in the store.<br>\n * position 1 - a function *deleteValue* to delete the data in the store. When used, this function return a promise that resolve nothing, thus you can use `deleteValue('a value').then(() => {doSomething() //when the store did update})`<br>\n *\n * @example\n * import {useGetAndDelete} from 'react-context-hook'\n * const [username, deleteUsername] = useGetAndDelete('username')\n * <div>hello {username}</div>\n * <button onClick={()=> deleteUsername('my_username')}>set username</button>\n *\n */\n\n\nfunction useGetAndDelete(key) {\n  return [useStoreValue(key), useDeleteStoreValue(key)];\n}\n/**\n *This React hook returns an array to set and delete a value in the store:\n * `const [setValue, deleteValue] = useGetAndDelete('a_lookup_key_in_the_store')`. The name of the variable in the arry is arbitrary and you can choose any string you like.\n * @param {string} key - The lookup key to find the saved value in the store\n *\n * @returns {array} an array with length 2:<br>\n * position 0 - a function *setValue* to modify the data in the store. When used, this function return a promise that resolve nothing, thus you can use `setValue('a value').then(() => {doSomething() //when the store did update})`<br>\n * position 1 - a function *deleteValue* to delete the data in the store. When used, this function return a promise that resolve nothing, thus you can use `deleteValue('a value').then(() => {doSomething() //when the store did update})`<br>\n *\n * @example\n * import {useGetAndDelete} from 'react-context-hook'\n * const [username, deleteUsername] = useGetAndDelete('username')\n * <div>hello {username}</div>\n * <button onClick={()=> deleteUsername('my_username')}>set username</button>\n *\n */\n\n\nfunction useSetAndDelete(key) {\n  return [useSetStoreValue(key), useDeleteStoreValue(key)];\n}\n/**\n *\n * @param {string} key - the name of the variable / value to be retrieved in the global store.\n * @param {any} [defaultValue] - an optional default value, if the value in the global store is not present.\n *\n * @returns {any} the value on the global store, or the default value if passed, or `undefined`\n */\n\n\nfunction useStoreValue(key, defaultValue) {\n  function stateSelector(state) {\n    return state[key];\n  }\n\n  var storeValue = useSelector(stateSelector);\n  return storeValue !== undefined ? storeValue : defaultValue;\n}\n/**\n * Returns the whole store value, with all the variables stored in it. Changes to this object will not change the store\n *\n * @returns {object} - An object representing the whole store value in read only mode.\n *\n * @example\n * import {useStoreState} from 'react-context-hook'\n * const store = useStoreState()\n * console.log('the store is', JSON.stringify(store))\n */\n\n\nfunction useStoreState() {\n  function stateSelector(state) {\n    return state;\n  }\n\n  return useSelector(stateSelector);\n}\n\nexport { rawStore as store, useDeleteStoreValue, useGetAndDelete, useGetAndSet, useSetAndDelete, useSetStoreValue, useStore, useStoreState, useStoreValue, withStore };","import React from 'react'\n\nexport default function Header() {\n  return (\n    <header className=\"App-header\">\n      <h1>\n        React context Hook <a href=\"docs\">Documentation</a>{' '}\n        <a href=\"https://github.com/Spyna/react-context-hook\">GitHub</a>.\n      </h1>\n      <h2>A 3 KB library to manage the global state with React hooks.</h2>\n    </header>\n  )\n}\n","import React from 'react'\n\nexport const useFlashWhenRender = () => {\n  const ref = React.useRef()\n  React.useEffect(() => {\n    ref.current.classList.toggle('flash')\n    setTimeout(() => ref.current && ref.current.classList.toggle('flash'), 100)\n  })\n  return ref\n}\n","import React from 'react'\nimport { useStore } from 'react-context-hook'\nimport { useFlashWhenRender } from './utils/useFlash'\n\nexport default function SetAmountExample() {\n  const [count, setCount, deleteCount] = useStore('count', 0)\n  return (\n    <section ref={useFlashWhenRender()}>\n      <h3>\n        Set the value <em>\"count\"</em> in the store\n      </h3>\n      <button id=\"decrement\" onClick={() => setCount(count - 1)}>\n        Decrement -{' '}\n      </button>\n      <span className=\"count\">{count}</span>\n      <button id=\"increment\" onClick={() => setCount(count + 1)}>\n        Increment +{' '}\n      </button>\n      <button id=\"delete-count\" onClick={() => deleteCount()}>\n        Delete \"count\" from store\n      </button>\n    </section>\n  )\n}\n","import React from 'react'\nimport { useStore } from 'react-context-hook'\nimport { useFlashWhenRender } from './utils/useFlash'\n\nexport default function SetUsernameExample() {\n  const [username, setUsername] = useStore('username', 'spyna', false)\n  const [textValue, setTextValue] = React.useState(username)\n  function onChange(event) {\n    setTextValue(event.target.value)\n  }\n\n  function onSubmit(event) {\n    event.preventDefault()\n    setUsername(textValue)\n  }\n\n  return (\n    <section ref={useFlashWhenRender()}>\n      <h3>\n        Set the value <em>\"username\"</em> in the store\n      </h3>\n      <form onSubmit={onSubmit}>\n        <input\n          onChange={onChange}\n          value={textValue}\n          name=\"username\"\n          placeholder=\"type your username\"\n        />\n        <button id=\"set-username\">Change value in store</button>\n      </form>\n    </section>\n  )\n}\n","import React from 'react'\nimport {\n  useStoreValue,\n  useSetStoreValue,\n  useDeleteStoreValue\n} from 'react-context-hook'\nimport { useFlashWhenRender } from './utils/useFlash'\n\nconst storeKey = 'login.logged_user'\n\nexport default function SetObjectExample() {\n  const defaultValue = {\n    name: 'My name',\n    surname: ' surname',\n    access_token: {\n      type: 'Bearer',\n      token: 'd293LCB5b3UgYXJlIHZlcnkgY3VyaW91cyEgZ29vZCBmb3IgeW91',\n      expires_in: 3600\n    }\n  }\n  const object = useStoreValue(storeKey, defaultValue)\n  const setObject = useSetStoreValue(storeKey)\n  const deleteObject = useDeleteStoreValue(storeKey)\n  return (\n    <section ref={useFlashWhenRender()}>\n      <h3>\n        Set/Remove this object in the store with the key <code>{storeKey}</code>\n      </h3>\n      <pre>\n        <code>{JSON.stringify(object, null, ' ')}</code>\n      </pre>\n      <button onClick={() => setObject(object)}>set Object in store</button>\n      <button onClick={() => deleteObject()}>remove Object from store</button>\n    </section>\n  )\n}\n","import React from 'react'\nimport { useStore } from 'react-context-hook'\nimport { useFlashWhenRender } from './utils/useFlash'\n\nexport default function UseStoreExample() {\n  const [price, setPrice, deletePrice] = useStore('price')\n  return (\n    <section ref={useFlashWhenRender()}>\n      <h3>\n        Set/Remove the key<code>price</code> with the value of{' '}\n        <code>99.9 $</code>\n      </h3>\n      <pre>\n        <code>{price}</code>\n      </pre>\n      <button onClick={() => setPrice('99.9 $')}>set price in store</button>\n      <button onClick={() => deletePrice()}>remove prce from store</button>\n    </section>\n  )\n}\n","import React from 'react'\nimport { useSetAndDelete } from 'react-context-hook'\nimport { useFlashWhenRender } from './utils/useFlash'\n\nexport default function UseSetAndDeleteExample() {\n  const [setValue, deleteValue] = useSetAndDelete('a-sample-key')\n  return (\n    <section ref={useFlashWhenRender()}>\n      <h3>\n        Set/Remove the key<code>'a-sample-key'</code> with the value{' '}\n        <code>'the value'</code>\n      </h3>\n      <button id=\"set-a-value\" onClick={() => setValue('the value')}>\n        set 'a-sample-key' in store\n      </button>\n      <button id=\"delete-a-value\" onClick={() => deleteValue()}>\n        remove 'a-sample-key' from store\n      </button>\n    </section>\n  )\n}\n","import React from 'react'\nimport { useStoreState } from 'react-context-hook'\nimport { useFlashWhenRender } from './utils/useFlash'\n\nexport default function Description() {\n  const globalState = useStoreState()\n  return (\n    <section ref={useFlashWhenRender()}>\n      <h3>\n        This is a React App that has a global state. This is the value of the\n        global <em>state</em>.\n      </h3>\n      <pre>\n        <code id=\"global-state\">{JSON.stringify(globalState, null, ' ')}</code>\n      </pre>\n      <p>\n        You can change the global state from different components, using the\n        buttons you find in this page\n      </p>\n      <p>Every time a component renders, it flashes. </p>\n    </section>\n  )\n}\n","import React from 'react'\nimport { useStoreValue } from 'react-context-hook'\nimport { useFlashWhenRender } from './utils/useFlash'\n\nexport default function UseStoreValueWithFalsyValues() {\n  const login = useStoreValue('logIn')\n  const counter = useStoreValue('counter')\n  const nullValue = useStoreValue('nullValue')\n  return (\n    <section ref={useFlashWhenRender()}>\n      <h3>\"Falsy\" value are preserved</h3>\n      <p>\n        \"logIn\" value is: <code>{JSON.stringify(login)}</code>\n      </p>\n      <p>\n        \"counter\" (not count) value is: <code>{JSON.stringify(counter)}</code>\n      </p>\n      <p>\n        \"nullValue\" value is: <code>{JSON.stringify(nullValue)}</code>\n      </p>\n    </section>\n  )\n}\n","import React from 'react'\nimport { withStore } from 'react-context-hook'\nimport Header from './layout/Header'\nimport SetAmount from './SetAmountExample'\nimport SetUsernameExample from './SetUsernameExample'\nimport './App.css'\nimport SetObjectExample from './SetObjectExample'\nimport UseStoreExample from './UseStoreExample'\nimport UseSetAndDeleteExample from './UseSetAndDeleteExample'\nimport Description from './Description'\nimport UseStoreValueWithFalsyValues from './UseStoreValueWithFalsyValues'\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <main className=\"App\">\n        <Description />\n        <SetAmount />\n        <SetUsernameExample />\n        <SetObjectExample />\n        <UseStoreExample />\n        <UseSetAndDeleteExample />\n        <UseStoreValueWithFalsyValues />\n      </main>\n    </div>\n  )\n}\n\nconst initialState = { count: 10, logIn: false, counter: 0, nullValue: null }\n\nconst storeConfig = {\n  listener: (state, key, prevValue, nextValue) => {\n    if (process.env.NODE_ENV !== 'test') {\n      console.log(`the key \"${key}\" changed in the store`)\n      console.log('the old value is', prevValue)\n      console.log('the current value is', nextValue)\n      console.log('the state is', state)\n    }\n  },\n  logging: process.env.NODE_ENV !== 'test'\n}\n\nexport default withStore(App, initialState, storeConfig)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}